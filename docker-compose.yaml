version: '3'

services:
  postgres-hicoder:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=hicoder'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=verysecret'
    networks:
      - hicoder-network
    container_name: postgres-hicoder
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 2s
      retries: 100
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis-hicoder:
    image: 'redis:latest'
    networks:
      - hicoder-network
    container_name: redis-hicoder
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'

  elasticsearch-hicoder:
    image: docker.elastic.co/elasticsearch/elasticsearch:sha256-fcf6b29cb00f1db56921e6cb47b506e6a207fcaeae777765dfa733dc007513a6
    container_name: elasticsearch-hicoder
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana-hicoder:
    image: docker.elastic.co/kibana/kibana:sha256-de457abb7ac4ea49bd2b2cf25f9247821fba113a8a12e463d898a1b1089a6379
    container_name: kibana-hicoder
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-hicoder:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-hicoder


  hicoder-backend:
    restart: always
    build:
        context: .
        dockerfile: Dockerfile
    container_name: hicoder-backend
    networks:
      - hicoder-network
    depends_on:
      - postgres-hicoder
      - redis-hicoder
      - elasticsearch-hicoder
      - kibana-hicoder


  nginx:
    image: 'nginx:latest'
    container_name: nginx-hicoder
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - hicoder-network
    depends_on:
      - hicoder-backend
    ports:
      - '80:80'
      - '443:443'

volumes:
  postgres-data:
  redis-data:
  esdata:
networks:
  hicoder-network:

